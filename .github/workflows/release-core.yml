name: Release Core

on:
  push:
    tags:
      - core@*

  workflow_dispatch: {}

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  # Publish to NPM
  npm:
    name: npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - name: Bootstrap packages
        run: npm run bootstrap
      - name: Cache npm Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  # Check if a GitHub Release for Inso already exists
  inso_release_info:
    needs: [ npm ]
    name: Does Inso release exist?
    runs-on: ubuntu-latest
    outputs:
      inso-version: ${{ steps.get-package-version.outputs.current-version }}
      tag-name: ${{ steps.get-tag.outputs.tag-name }}
      should-create-release: ${{ steps.check-release.outputs.should-create-release }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Get version
        id: get-package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: packages/insomnia-inso
      - name: Get tag for version
        id: get-tag
        run: echo "::set-output name=tag-name::lib@${{ steps.get-package-version.outputs.current-version }}"
      - name: Find release by tag
        # Finding a release by a particular tag will throw an error and fail if a release doesn't exist
        continue-on-error: true
        id: find-release
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
          tag_name: ${{ steps.get-tag.outputs.tag-name }}
      - name: Check release exists
        id: check-release
        run: echo "::set-output name=should-create-release::${{ steps.find-release.outcome == 'failure' }}"
  
  # Create GitHub Release for Inso
  create_inso_release:
    needs: [ inso_release_info ]
    if: needs.inso_release_info.outputs.should-create-release == 'true'
    name: Create Inso Release
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.inso_release_info.outputs.tag-name }}
          # The following is all taken from packages/insomnia-app/scripts/release.ts
          name: "Inso CLI ${{ needs.inso_release_info.outputs.inso-version }} ðŸ“¦"
          body: Full changelog â‡’ https://insomnia.rest/changelog
          draft: false
          prerelease: true
  
  # Package and upload Inso release artifacts
  upload_inso:
    needs: [ inso_release_info, create_inso_release ]
    name: Package & release Inso
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - name: Bootstrap packages
        run: npm run bootstrap

      - name: Set Inso Variables
        id: inso-variables
        shell: bash
        run: |
          PKG_NAME="inso-${{ matrix.os }}-${{ needs.inso_release_info.outputs.inso-version }}"
          BUNDLE_ID="com.insomnia.inso"

          echo ::set-output name=pkg-name::$PKG_NAME
          echo ::set-output name=bundle-id::$BUNDLE_ID

      - name: Package Inso CLI binary
        run: npm run inso-package
        env:
          VERSION: ${{ needs.inso_release_info.outputs.inso-version }}

      - name: Run CLI smoke tests
        run: npm run test:smoke:cli

      - name: Create Inso CLI artifacts
        run: npm run inso-package:artifacts
        env:
          VERSION: ${{ needs.inso_release_info.outputs.inso-version }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.inso_release_info.outputs.tag-name }}
          files: packages/insomnia-inso/artifacts/*
          fail_on_unmatched_files: true

# Update Homebrew's "inso" formulae
  update_inso_homebrew:
    needs: [ inso_release_info, create_inso_release, upload_inso ]
    name: Update Inso Formulae
    runs-on: ubuntu-latest
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        env:
          GITHUB_REPOSITORY: homebrew-cask
      - name: Bump Inso Formulae
        uses: Homebrew/actions/bump-formulae@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Bump only these formulae if outdated
          formulae: |
            inso
            inso-beta
  
  # Package and upload Insomnia MacOS release artifacts
  mac_app:
    needs: [ npm ]
    name: Mac
    runs-on: macos-latest
    env:
      NPM_CONFIG_TARGET: 12.2.3
      NPM_CONFIG_DISTURL: https://electronjs.org/headers
      NPM_CONFIG_RUNTIME: electron
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Read Node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NVMRC }}
      - name: Bootstrap packages
        run: npm run bootstrap

  # Update Homebrew's "insomnia" formula
  update_insomnia_homebrew:
    needs: [ mac_app ]
    name: Update Insomnia Formula
    runs-on: ubuntu-latest
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Bump Insomnia Formula
        uses: Homebrew/actions/bump-formulae@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Bump only these formulae if outdated
          formulae: insomnia
